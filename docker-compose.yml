---

x-shared:
  zammad-service: &zammad-service
    environment: &zammad-environment
      MEMCACHE_SERVERS: ${MEMCACHE_SERVERS:-zammad-memcached:11211}
      POSTGRESQL_DB: ${POSTGRES_DB:-zammad_production}
      POSTGRESQL_HOST: ${POSTGRES_HOST:-zammad-postgresql}
      POSTGRESQL_USER: ${POSTGRES_USER:-zammad}
      POSTGRESQL_PASS: ${POSTGRES_PASS:-zammad}
      POSTGRESQL_PORT: ${POSTGRES_PORT:-5432}
      POSTGRESQL_OPTIONS: ${POSTGRESQL_OPTIONS:-?pool=50}
      POSTGRESQL_DB_CREATE:
      REDIS_URL: ${REDIS_URL:-redis://zammad-redis:6379}
      S3_URL:
      # Backup settings
      BACKUP_DIR: "${BACKUP_DIR:-/var/tmp/zammad}"
      BACKUP_TIME: "${BACKUP_TIME:-03:00}"
      HOLD_DAYS: "${HOLD_DAYS:-10}"
      TZ: "${TZ:-Europe/Berlin}"
      # Allow passing in these variables via .env:
      AUTOWIZARD_JSON:
      AUTOWIZARD_RELATIVE_PATH:
      ELASTICSEARCH_ENABLED:
      ELASTICSEARCH_SCHEMA:
      ELASTICSEARCH_HOST:
      ELASTICSEARCH_PORT:
      ELASTICSEARCH_USER:
      ELASTICSEARCH_PASS:
      ELASTICSEARCH_NAMESPACE:
      ELASTICSEARCH_REINDEX:
      NGINX_PORT:
      NGINX_CLIENT_MAX_BODY_SIZE:
      NGINX_SERVER_NAME:
      NGINX_SERVER_SCHEME:
      RAILS_TRUSTED_PROXIES:
      ZAMMAD_HTTP_TYPE:
      ZAMMAD_FQDN:
      ZAMMAD_WEB_CONCURRENCY:
      ZAMMAD_PROCESS_SESSIONS_JOBS_WORKERS:
      ZAMMAD_PROCESS_SCHEDULED_JOBS_WORKERS:
      ZAMMAD_PROCESS_DELAYED_JOBS_WORKERS:
      # ZAMMAD_SESSION_JOBS_CONCURRENT is deprecated, please use ZAMMAD_PROCESS_SESSIONS_JOBS_WORKERS instead.
      ZAMMAD_SESSION_JOBS_CONCURRENT:
      # Variables used by ngingx-proxy container for reverse proxy creations
      # for docs refer to https://github.com/nginx-proxy/nginx-proxy
      VIRTUAL_HOST:
      VIRTUAL_PORT:
      # Variables used by acme-companion for retrieval of LetsEncrypt certificate
      # for docs refer to https://github.com/nginx-proxy/acme-companion
      LETSENCRYPT_HOST:
      LETSENCRYPT_EMAIL:

    image: ${IMAGE_REPO:-ghcr.io/zammad/zammad}:${VERSION:-6.5.0-101}
    restart: ${RESTART:-always}
    volumes:
      - zammad-storage:/opt/zammad/storage
    depends_on:
      - zammad-memcached
      - zammad-postgresql
      - zammad-redis

services:
  zammad-backup:
    <<: *zammad-service
    command: ["zammad-backup"]
    volumes:
      - zammad-backup:/var/tmp/zammad
      - zammad-storage:/opt/zammad/storage:ro
    user: 0:0

  zammad-elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VERSION:-8.18.0}
    restart: ${RESTART:-always}
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.security.enabled: 'false'
      ES_JAVA_OPTS: ${ELASTICSEARCH_JAVA_OPTS:--Xms1g -Xmx1g}

  zammad-init:
    <<: *zammad-service
    command: ["zammad-init"]
    depends_on:
      - zammad-postgresql
    restart: on-failure
    user: 0:0

  zammad-memcached:
    command: memcached -m 256M
    image: memcached:${MEMCACHE_VERSION:-1.6.38-alpine}
    restart: ${RESTART:-always}

  zammad-nginx:
    <<: *zammad-service
    command: 
      - sh
      - -c
      - |
        # Create necessary directories
        mkdir -p /etc/nginx/ssl /etc/nginx/sites-enabled /etc/nginx/sites-available /var/log/nginx /opt/zammad/tmp
        
        # Ensure zammad user can write to log directory and our temp directory
        chown -R zammad:zammad /var/log/nginx /opt/zammad/tmp
        
        # Generate self-signed certificate inside container
        echo "Generating SSL certificate..."
        openssl req -newkey rsa:4096 -nodes -x509 -days 1825 -subj "/CN=zammad.local" \
          -keyout /etc/nginx/ssl/zammad.key -out /etc/nginx/ssl/zammad.crt
        
        # Verify certificate was created
        echo "SSL certificate files:"
        ls -la /etc/nginx/ssl/
        echo "Certificate details:"
        openssl x509 -in /etc/nginx/ssl/zammad.crt -text -noout | head -20
        
        # Create main nginx configuration
        cat > /etc/nginx/nginx.conf << 'EOF'
        worker_processes auto;
        pid /opt/zammad/tmp/nginx.pid;

        events {
            worker_connections 1024;
            use epoll;
        }

        http {
            include /etc/nginx/mime.types;
            default_type application/octet-stream;

            log_format main '$$remote_addr - $$remote_user [$$time_local] "$$request" '
                            '$$status $$body_bytes_sent "$$http_referer" '
                            '"$$http_user_agent" "$$http_x_forwarded_for"';

            access_log /var/log/nginx/access.log main;
            error_log /var/log/nginx/error.log warn;

            sendfile on;
            tcp_nopush on;
            tcp_nodelay on;
            keepalive_timeout 65;
            types_hash_max_size 2048;

            gzip on;
            gzip_types text/plain text/xml text/css image/svg+xml application/javascript application/x-javascript application/json application/xml;
            gzip_proxied any;

            include /etc/nginx/sites-enabled/*;
        }
        EOF

        # Create site configuration
        cat > /etc/nginx/sites-available/zammad.conf << 'EOF'
        upstream zammad-railsserver {
            server zammad-railsserver:3000;
        }

        upstream zammad-websocket {
            server zammad-websocket:6042;
        }

        server {
            listen 80;
            listen [::]:80;
            server_name _;

            access_log /var/log/nginx/zammad.access.log main;
            error_log  /var/log/nginx/zammad.error.log;

            return 301 https://$$host:12349$$request_uri;
        }

        server {
            listen 443 ssl http2;
            listen [::]:443 ssl http2;
            server_name _;

            ssl_certificate     /etc/nginx/ssl/zammad.crt;
            ssl_certificate_key /etc/nginx/ssl/zammad.key;

            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
            ssl_prefer_server_ciphers on;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;

            location = /robots.txt  {
                access_log off; log_not_found off;
            }

            location = /favicon.ico {
                access_log off; log_not_found off;
            }

            root /opt/zammad/public;

            access_log /var/log/nginx/zammad.access.log main;
            error_log  /var/log/nginx/zammad.error.log;

            client_max_body_size 50M;

            location ~ ^/(assets/|robots.txt|humans.txt|favicon.ico|apple-touch-icon.png) {
                expires max;
            }

            location /ws {
                proxy_http_version 1.1;
                proxy_set_header Upgrade $$http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header CLIENT_IP $$remote_addr;
                proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $$scheme;
                proxy_read_timeout 86400;
                proxy_pass http://zammad-websocket;
            }

            location / {
                proxy_set_header Host $$http_host;
                proxy_set_header CLIENT_IP $$remote_addr;
                proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto https;
                proxy_read_timeout 300;
                proxy_pass http://zammad-railsserver;
            }
        }
        EOF
        
        # Remove any existing configurations and enable our config
        rm -rf /etc/nginx/sites-enabled/*
        ln -s /etc/nginx/sites-available/zammad.conf /etc/nginx/sites-enabled/zammad.conf
        
        # Test nginx configuration
        echo "Testing nginx configuration..."
        nginx -t
        
        # Show what nginx will listen on
        echo "Nginx will listen on:"
        grep -n "listen" /etc/nginx/sites-enabled/zammad.conf
        
        echo "Starting nginx..."
        # Start nginx in foreground
        exec nginx -g "daemon off;"
    expose:
      - "443"
      - "80"
    ports:
      - "12349:443"  # HTTPS on port 12349 (self-signed)
      - "12399:80"   # HTTP on port 12399 (optional, for redirect)
    environment:
      <<: *zammad-environment
      NGINX_PORT: 443
      NGINX_SERVER_SCHEME: https
      NGINX_SERVER_NAME: "_"
    volumes:
      - zammad-storage:/opt/zammad/storage
    depends_on:
      - zammad-railsserver

  zammad-postgresql:
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-zammad_production}
      POSTGRES_USER: ${POSTGRES_USER:-zammad}
      POSTGRES_PASSWORD: ${POSTGRES_PASS:-zammad}
    image: postgres:${POSTGRES_VERSION:-17.5-alpine}
    restart: ${RESTART:-always}
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  zammad-railsserver:
    <<: *zammad-service
    command: ["zammad-railsserver"]

  zammad-redis:
    image: redis:${REDIS_VERSION:-7.4.4-alpine}
    restart: ${RESTART:-always}
    volumes:
      - redis-data:/data

  zammad-scheduler:
    <<: *zammad-service
    command: ["zammad-scheduler"]

  zammad-websocket:
    <<: *zammad-service
    command: ["zammad-websocket"]

volumes:
  elasticsearch-data:
    driver: local
  postgresql-data:
    driver: local
  redis-data:
    driver: local
  zammad-backup:
    driver: local
  zammad-storage:
    driver: local
